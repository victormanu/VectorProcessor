module Decode_Stage (clk, instr, immALU, exec, mem, wb, r1, r2, branchDir, dest);
	input logic clk;
	input logic [31:0]instr;

	output logic [31:0] r1;
	output logic [31:0] r2;
	output logic [31:0] immALU;
	output logic [5:0] exec;
	output logic [4:0] mem;
	output logic [1:0] wb;
	output logic [26:0] branchDir;
	output logic [3:0] dest;
	
	logic [15:0] imm;
	logic [3:0] oper1;
	logic [3:0] oper2; 
	logic [3:0] oper3;
	logic [26:0] branch;
	
	logic [31:0] imm31;
	logic [5:0] EX;
	logic [4:0] MEM;
	logic [1:0] WB;
	
	Control_Unit crtlUnit (instr, oper1, oper2, oper3, imm, branch, EX, MEM, WB);
	extendZero zeroExt (imm, imm31);
	File_Register regBank (clk, oper2, oper3, oper1, 0, 1'b1, 1'b0, r1, r2);
	always @(posedge clk) begin
		exec <= EX; 
		mem <= MEM;
		wb <= WB;
		immALU <= imm31;
		branchDir <= branch;
		dest <= oper1;
	end
endmodule 